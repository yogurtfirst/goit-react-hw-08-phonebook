{"version":3,"file":"static/js/912.f2102f38.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\nexport const getLoadingStatus = state => state.contacts.isLoading;\nexport const getErrorStatus = state => state.contacts.error;","import styled from '@emotion/styled';\n\nexport const ContactWrapper = styled.form`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    gap: 5px;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 14px;\n    border: 1px solid black;\n    border-radius: 12px;\n`;\n\nexport const Label = styled.label`\n    font-size: 14px;\n`;\n\nexport const Input = styled.input`\n    width: 70%;\n    padding: 6px;\n    border: 0.5px solid grey;\n    border-radius: 10px;\n    font-size: 14px;\n`;\n\nexport const Button = styled.button`\n    margin: auto;\n    padding: 6px;\n    border: 0.5px solid grey;\n    border-radius: 16px;\n    :hover,\n    :focus {\n        background-color: rgb(35, 149, 207);\n        color: white;\n    }\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { createContact } from '../../redux/contacts/action';\nimport { ContactWrapper, Label, Input, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n    const addContact = contact => dispatch(createContact(contact));\n\n    const onChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                console.error(`Unexpected attribute - ${name}`);\n        }\n    };\n\n    const onAddToContactSubmit = e => {\n        e.preventDefault();\n\n        if (contacts.items.some(contact => contact.name === name)) alertmessage(name)\n        else addContact({ name, number });\n\n        setName('');\n        setNumber('');\n    };\n\n    const alertmessage = name => alert(`${name} is already in contacts`);\n\n    return (\n        <ContactWrapper onSubmit={onAddToContactSubmit}>\n            <Label htmlFor=\"name\">Name</Label>\n            <Input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={onChange}\n                value={name}\n            />\n            <Label htmlFor=\"tel\">Number</Label>\n            <Input\n                type=\"tel\"\n                id=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={onChange}\n                value={number}\n            />\n            <Button type=\"submit\">Add to contact</Button>\n        </ContactWrapper>\n    );\n};","import styled from '@emotion/styled';\n\nexport const Contact = styled.li`\n    margin-top: 10px;\n    padding: 5px 8px;\n    border: 0.5px solid grey;\n    border-radius: 40px;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const Avatar = styled.div`\n    border: 0.5px solid #4c8277;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #dce9a3;\n`;\n\nexport const Name = styled.p`\n    margin: 0;\n    padding: 0;\n    text-transform: capitalize;\n    font-size: 16px;\n    font-weight: 600;\n`;\n\nexport const Phone = styled.p`\n    margin: 0;\n    padding: 0;\n    font-size: 12px;\n    font-weight: 400;\n`;\n\nexport const Btn = styled.button`\n    border: 0.5px solid #4c8277;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n        :hover,\n        :focus {\n            background-color: rgb(35, 149, 207);\n            color: white;\n        }\n`;","import PropTypes from 'prop-types';\nimport { FiGithub, FiTrash2 } from \"react-icons/fi\";\nimport { Contact, Avatar, Name, Phone, Btn } from './ContactItem.styled';\n\nexport const ContactItem = ({ name, id, number, deleteContact }) => (\n    <Contact name=\"contact\">\n        <Avatar><FiGithub size={24}/></Avatar>\n        <div>\n            <Name>{name}</Name>\n            <Phone>{number}</Phone>\n        </div>\n        <Btn type=\"button\" onClick={() => deleteContact(id)} id={id}><FiTrash2 size={24}/></Btn>\n    </Contact>\n);\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    deleteContact: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n    max-height: 310px;\n    overflow: auto;\n    font-size: 14px;\n    font-weight: 500;\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter, getLoadingStatus, getErrorStatus } from '../../redux/contacts/selectors';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/action';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { Contacts } from './ContactList.styled';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const filterState = useSelector(getFilter);\n    const isLoading = useSelector(getLoadingStatus);\n    const error = useSelector(getErrorStatus);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const removeContact = id => dispatch(deleteContact(id));\n\n    const getFilterNormalize = () => filterState.toLowerCase();\n    \n    const getFilteredContacts = () =>\n        contacts.items.filter(contact =>\n            contact.name.toLowerCase().includes(getFilterNormalize())\n        );\n\n    return (\n        <Contacts>\n            {\n                (error && <b>{error}</b>) || \n                (isLoading && <b>Please wait, loading is in progress...</b>) ||\n                getFilteredContacts().map(({ id, name, number }) => (\n                    <ContactItem\n                        name={name}\n                        key={id}\n                        id={id}\n                        number={number}\n                        deleteContact={removeContact}\n                    />\n                ))\n            }\n        </Contacts>\n    )\n};","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n`;\n\nexport const Label = styled.label`\n    font-size: 14px;\n`;\n\nexport const Input = styled.input`\n    width: 80%;\n    padding: 5px;\n    border: 0.5px solid grey;\n    border-radius: 10px;\n    font-size: 14px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\nimport { Wrapper, Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n    const handleChange = ({ target: { value } }) => dispatch(changeFilter(value));\n\n    return (\n        <Wrapper>\n            <Label htmlFor=\"filter\">Search</Label>\n            <Input\n                type=\"text\"\n                name=\"filter\"\n                id=\"filter\"\n                value={filter}\n                onChange={handleChange}\n            />\n        </Wrapper>\n    );\n};","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    position: relative;\n    margin: 24px auto;\n    width: 300px;\n    padding: 6px;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    gap: 10px;\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);\n`;\n\nexport const ListTitle = styled.h2`\n    display: none\n`;\n\nexport const Button = styled.button`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    border-radius: 50%;\n`;","import { useState } from 'react';\nimport { GoPlus, GoX } from \"react-icons/go\";\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ListTitle, Wrapper, Button } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n    const [toggle, setToggle] = useState(false);\n    const toggleHandler = () => setToggle(!toggle);;\n  \n    return (\n        <Wrapper>\n            <h1>Phonebook</h1>\n            {toggle && <ContactForm />}\n            <ListTitle>Contacts</ListTitle>\n            <Filter />\n            <ContactList />\n            {toggle ? <Button type=\"button\" onClick={toggleHandler}><GoX></GoX></Button> : <Button type=\"button\" onClick={toggleHandler}><GoPlus></GoPlus></Button>}\n        </Wrapper>\n    );\n};\n\nexport default ContactsPage;"],"names":["getContacts","state","contacts","getFilter","filter","getLoadingStatus","isLoading","getErrorStatus","error","ContactWrapper","styled","Label","Input","Button","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onChange","target","value","console","alertmessage","alert","onSubmit","e","contact","preventDefault","items","some","createContact","htmlFor","type","id","pattern","title","required","Contact","Avatar","Name","Phone","Btn","ContactItem","deleteContact","size","onClick","Contacts","ContactList","filterState","useEffect","fetchContacts","removeContact","toLowerCase","includes","map","Wrapper","Filter","changeFilter","ListTitle","toggle","setToggle","toggleHandler"],"sourceRoot":""}